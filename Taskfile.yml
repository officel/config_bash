# yaml-language-server: $schema=https://taskfile.dev/schema.json
# https://taskfile.dev/

version: '3'

tasks:
  default:
    cmd: task --list
    silent: true
    # desc を空、silent: true 、 task --list でデフォルトの表示をクリーンにした

  test:
    desc: test tasks
    aliases:
      - "t"
    cmds:
      - task: test_vars_sh
      - task: test_variables

  test_vars_sh:
    # desc を書かない代わりに summary は書くようにしたい
    summary: |
      about vars with shell commands.
      let's check title and outputs.
    vars:
      _d1: $(date -I)
      _d2:
        sh: date -I
      _d3: date -I
    cmds:
      - "# タイトルにコマンドを表示したい時"
      - echo "vars._d1:" "{{._d1}}"
      - "# そのまま表示したい時はシングルクォーテーションで囲む"
      - echo "vars._d1:" '{{._d1}}'

      - "# タイトルにコマンドの結果を表示したい時"
      - echo "vars._d2:" "{{._d2}}"
      - "# 処理済の文字列が入っているのでシングルクォーテーションで囲っても同じ"
      - echo "vars._d2:" '{{._d2}}'

      - "# ただの文字列"
      - echo "vars._d3:" "{{._d3}}"
      - "# ただの文字列を評価すれば結果が得られる"
      - echo "vars._d3:" "$({{._d3}})"
    # internal: true にしないことで --list では非表示だけど叩けるタスクにする

  test_variables:
    desc: test variables
    aliases:
      - tv
    vars:
      INT: 10
      FLOAT: 3.14
      ARRAY:
        - 1
        - 2
        - 3
      LIST:
        - A
        - B
        - C
      STRING: "日本語"
      RESULT: $(date -I)
    cmds:
      - echo {{add .INT .FLOAT}}
      - echo {{range .ARRAY}}{{.}}{{end}}
      - for:
          var: ARRAY
        cmd: echo "in " {{.ITEM}}
      - echo {{range .LIST}}{{.}}{{end}}
      - for:
          var: LIST
        cmd: echo "LIST has " {{.ITEM}}
        # LIST と ARRAY の違いとは
